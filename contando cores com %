import os

# Solicitar ao usuário as duas porcentagens desejadas
user_percent1 = float(input("Digite a menor porcentagem desejada: "))
user_percent2 = float(input("Digite a maior porcentagem desejada: "))

desktop_path = os.path.join(os.path.expanduser("~"), "Desktop")
log_file_path = os.path.join(desktop_path, "historico_do_dia.txt")

acertos = 0
acertos_martingale = 0
acertos_oposta = 0
acertos_martingale_oposta = 0
erros = 0
erros_martingale = 0
erros_oposta = 0
erros_martingale_oposta = 0
total_acertos = 0
total_acertos_martingale = 0
total_erros = 0
total_erros_martingale = 0
total_ocorrencias = 0

with open(log_file_path, "r") as file:
    lines = file.readlines()

for index, line in enumerate(lines):
    if "Acerto !! Cor atual:" in line:
        total_ocorrencias += 1
        total_acertos += 1
        cor_atual = line.split(":")[-1].strip()
        if cor_atual != "white":  # Ignorar acertos brancos
            acertos += 1
            if cor_atual == "black":
                acertos_oposta += 1
                
        # Aqui corrigimos a extração das porcentagens
        if index + 2 < len(lines):
            porcentagens_line = lines[index+2]
            if "Ultimas 25 rodadas:" in porcentagens_line:
                porcentagens = porcentagens_line.split("Ultimas 25 rodadas:")[-1].replace("[", "").replace("]", "").split(", ")
                porcentagem_cor_atual = porcentagens[["white", "black", "red"].index(cor_atual)].replace("%", "").strip()
                if porcentagem_cor_atual:
                    porcentagem_cor_atual = int(''.join(filter(str.isdigit, porcentagem_cor_atual)))
                    if user_percent1 <= porcentagem_cor_atual <= user_percent2:
                        acertos += 1
                        if cor_atual == "black":
                            acertos_oposta += 1
    elif "Acerto no Martingale !! Cor atual:" in line:
        total_ocorrencias += 1
        total_acertos_martingale += 1
        cor_atual = line.split(":")[-1].strip()
        if cor_atual != "white":  # Ignorar acertos brancos
            acertos_martingale += 1
            if cor_atual == "black":
                acertos_martingale_oposta += 1
                
        # Aqui corrigimos a extração das porcentagens
        if index + 2 < len(lines):
            porcentagens_line = lines[index+2]
            if "Ultimas 25 rodadas:" in porcentagens_line:
                porcentagens = porcentagens_line.split("Ultimas 25 rodadas:")[-1].replace("[", "").replace("]", "").split(", ")
                porcentagem_cor_atual = porcentagens[["white", "black", "red"].index(cor_atual)].replace("%", "").strip()
                if porcentagem_cor_atual:
                    porcentagem_cor_atual = int(''.join(filter(str.isdigit, porcentagem_cor_atual)))
                    if user_percent1 <= porcentagem_cor_atual <= user_percent2:
                        acertos_martingale += 1
                        if cor_atual == "black":
                            acertos_martingale_oposta += 1
    elif "Erro !! Cor atual:" in line:
        total_ocorrencias += 1
        total_erros += 1
        cor_atual = line.split(":")[-1].strip()
        if cor_atual == "white":  # Cor branca
            cor_atual = "black"  # Escolher cor oposta
            erros_oposta += 1
        erros += 1
        
        # Aqui corrigimos a extração das porcentagens
        if index + 2 < len(lines):
            porcentagens_line = lines[index+2]
            if "Ultimas 25 rodadas:" in porcentagens_line:
                porcentagens = porcentagens_line.split("Ultimas 25 rodadas:")[-1].replace("[", "").replace("]", "").split(", ")
                porcentagem_cor_atual = porcentagens[["white", "black", "red"].index(cor_atual)].replace("%", "").strip()
                if porcentagem_cor_atual:
                    porcentagem_cor_atual = int(''.join(filter(str.isdigit, porcentagem_cor_atual)))
                    if user_percent1 <= porcentagem_cor_atual <= user_percent2:
                        erros += 1
                        if cor_atual == "black":
                            erros_oposta += 1
    elif "Erro no Martingale !! Cor atual:" in line:
        total_ocorrencias += 1
        total_erros_martingale += 1
        cor_atual = line.split(":")[-1].strip()
        if cor_atual == "white":  # Cor branca
            cor_atual = "black"  # Escolher cor oposta
            erros_martingale_oposta += 1
        erros_martingale += 1
        
        # Aqui corrigimos a extração das porcentagens
        if index + 2 < len(lines):
            porcentagens_line = lines[index+2]
            if "Ultimas 25 rodadas:" in porcentagens_line:
                porcentagens = porcentagens_line.split("Ultimas 25 rodadas:")[-1].replace("[", "").replace("]", "").split(", ")
                porcentagem_cor_atual = porcentagens[["white", "black", "red"].index(cor_atual)].replace("%", "").strip()
                if porcentagem_cor_atual:
                    porcentagem_cor_atual = int(''.join(filter(str.isdigit, porcentagem_cor_atual)))
                    if user_percent1 <= porcentagem_cor_atual <= user_percent2:
                        erros_martingale += 1
                        if cor_atual == "black":
                            erros_martingale_oposta += 1

# Calcula a porcentagem de cada categoria em relação ao número total de ocorrências
porcentagem_acertos = (acertos / total_ocorrencias) * 100 if total_ocorrencias else 0
porcentagem_acertos_oposta = (acertos_oposta / total_ocorrencias) * 100 if total_ocorrencias else 0
porcentagem_acertos_martingale = (acertos_martingale / total_ocorrencias) * 100 if total_ocorrencias else 0
porcentagem_acertos_martingale_oposta = (acertos_martingale_oposta / total_ocorrencias) * 100 if total_ocorrencias else 0
porcentagem_erros = (erros / total_ocorrencias) * 100 if total_ocorrencias else 0
porcentagem_erros_oposta = (erros_oposta / total_ocorrencias) * 100 if total_ocorrencias else 0
porcentagem_erros_martingale = (erros_martingale / total_ocorrencias) * 100 if total_ocorrencias else 0
porcentagem_erros_martingale_oposta = (erros_martingale_oposta / total_ocorrencias) * 100 if total_ocorrencias else 0

print("Acertos com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), acertos,
      "(total", total_acertos, ") -", round(porcentagem_acertos, 2), "%")
print("Acertos Cor Oposta com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), acertos_oposta,
      "(total", total_acertos, ") -", round(porcentagem_acertos_oposta, 2), "%")
print("Acertos Martingale com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), acertos_martingale, "(total",
      total_acertos_martingale, ") -", round(porcentagem_acertos_martingale, 2), "%")
print("Acertos Martingale Cor Oposta com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), acertos_martingale_oposta,
      "(total", total_acertos_martingale, ") -", round(porcentagem_acertos_martingale_oposta, 2), "%")
print("Erros com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), erros,
      "(total", total_erros, ") -", round(porcentagem_erros, 2), "%")
print("Erros Cor Oposta com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), erros_oposta,
      "(total", total_erros, ") -", round(porcentagem_erros_oposta, 2), "%")
print("Erros Martingale com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), erros_martingale,
      "(total", total_erros_martingale, ") -", round(porcentagem_erros_martingale, 2), "%")
print("Erros Martingale Cor Oposta com %.1f%% até %.1f%%:" % (user_percent1, user_percent2), erros_martingale_oposta,
      "(total", total_erros_martingale, ") -", round(porcentagem_erros_martingale_oposta, 2), "%")
